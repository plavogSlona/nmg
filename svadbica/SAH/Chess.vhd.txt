---------------------------------------------
-- Ime i prezime: Bojana Bratic
-- Broj indeksa: PR28/2020
---------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.ALL;

entity Chess is port ( 
	iCLK  	: in  std_logic;
	iRST  	: in  std_logic;
	iSTART  	: in  std_logic;
	iPLAYER 	: in  std_logic;      --0 za belog 1 za crnog
	oEND		: out std_logic_vector(1 downto 0)
	);
end entity;

architecture Behavioral of Chess is
  type tSTATE is(IDLE, WHITE, BLACK, END_GAME);
  signal sSTATE, sNEXT_STATE:tSTATE;
  
  signal sWL: std_logic;
  signal sBL:  std_logic;
  signal sW_EN: std_logic;
  signal sWS_TC: std_logic;
  signal sWM_Tc: std_logic;
  signal sB_EN: std_logic;
  signal sBS_TC: std_logic;
  signal sBM_TC: std_logic;
  signal sW_MIN_CNT: std_logic_vector(2 downto 0); --brojac modula 5
  signal sB_MIN_CNT: std_logic_vector(2 downto 0); --brojac modula 5
  signal sW_SEC_CNT: std_logic_Vector(5 downto 0); --brojac modula 60
  signal sB_SEC_CNT: std_logic_Vector(5 downto 0); --brojac modula 60
  

	
begin
 --registar stanja 
  process(iCLK, iRST)begin
   if(iRST='1')then
     sSTATE<=IDLE;
   elsif(iCLK 'event and iCLK='1')then
     sSTATE<=sNEXT_STATE;
   end if;
  end process;

 --brojac minuta za belog igraca
 process(iCLK, iRST)begin
  if(iRST='1')then
   sW_MIN_CNT<="000";
  elsif(iCLK 'event and iCLK='1')then
   if(sWS_TC='1')then
	 if(sW_MIN_CNT<5)then
	  sW_MIN_CNT<=sW_MIN_CNT+1;
	 else 
	  sW_MIN_CNT<="000";
	 end if;
	end if;
  end if;
 end process;
 
 
 --brojac minuta za crnog igraca
 process(iCLK, iRST)begin
  if(iRST='1')then
   sB_MIN_CNT<="000";
  elsif(iCLK 'event and iCLK='1')then
   if(sBS_TC='1')then
	 if(sB_MIN_CNT<5)then
	  sB_MIN_CNT<=sB_MIN_CNT+1;
	 else 
	  sB_MIN_CNT<="000";
	 end if;
	end if;
  end if;
 end process;
 
 
 --brojac sekundi za belog igraca
 process(iCLK, iRST)begin
  if(iRST='1')then
   sW_SEC_CNT<="000000";
  elsif(iCLK 'event and iCLK='1')then
   if(sW_EN='1')then
	 if(sW_SEC_CNT<60)then
	  sw_SEC_CNT<=sW_SEC_CNT+1;
	 else 
	  sW_SEC_CNT<="000000";
	 end if;
	end if;
  end if;
 end process;
 
 
 --brojac sekundi za crnog igraca
 process(iCLK, iRST)begin
  if(iRST='1')then
   sB_SEC_CNT<="000000";
  elsif(iCLK 'event and iCLK='1')then
   if(sB_EN='1')then
	 if(sB_SEC_CNT<60)then
	  sB_SEC_CNT<=sB_SEC_CNT+1;
	 else 
	  sB_SEC_CNT<="000000";
	 end if;
	end if;
  end if;
 end process;
 
 
 
 --funkcija prelaza automata
 process(sSTATE, iSTART, iPLAYER, sWL, sBL)begin
 case(sSTATE) is
  when IDLE=>
   if(iSTART='1')then
	 sNEXT_STATE<=WHITE;
	else
	 sNEXT_STATE<=IDLE;
	 end if;
  when WHITE=>
    if(sWL='1')then
	  sNEXT_STATE<=END_GAME;
	 end if;
	 if(iPLAYER='1')then
     sNEXT_STATE<=BLACK;
	 else
	  sNEXT_STATE<=WHITE;
	 end if;
  when BLACK=>
    if(sBL='1')then
	  sNEXT_STATE<=END_GAME;
	 end if;
	 if(iPLAYER='0')then
	  sNEXT_STATE<=WHITE;
	 else
	  sNEXT_STATE<=BLACK;
	 end if;
	 
	when others=>
	 sNEXT_STATE<=IDLE;
	 
  end case;
 end process;
 
 --funkcija izlaza
 sW_EN<='1' when sSTATE=WHITE else '0';
 sWS_TC<='1' when sW_SEC_CNT="111100" else '0';
 sWM_TC<='1' when sW_MIN_CNT="101" else '0';
 
 sB_EN<='1' when sSTATE=BLACK else '0';
 sBS_TC<='1' when sB_SEC_CNT="111100" else '0';
 sBM_TC<='1' when sB_MIN_CNT="101" else '0';
 
 sWL<='1' when sWS_TC='1' and sWM_TC='1' else '0';
 sBL<='1' when sBS_TC='1' and sBM_TC='1' else '0';
 
 oEND<="10" when sWL='1'
     else "01" when sBL='1'
	  else "00";
 
 
end Behavioral;
